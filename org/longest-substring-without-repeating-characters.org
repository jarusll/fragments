#+title: Longest substring without repeating characters
#+date: <2022-05-29T15:40:47+05:30>
#+draft: true

* Substring without repeating characters(WRC)
  
  - Is =a= a substring of =abb=?
    - Yes, =abb= contains =a=

  - Is =a= a substring WRC of =abb=?
    - Yes, =a= occurs only once in the substring =a=

  - Is =ab= a substring WRC of =abb=?
    - Yes

  - Is =abb= substring WRC of =abb=?
    - No, =b= occurs twice

  - Cay we say for substring WRC =X= and an adjacent substring =Y= to be a substring WRC in =Z=, =Y= should not occur in =X= ?
    where
    | variable | value   |
    |----------+---------|
    | =X=      | =ab=    |
    | =Y=      | =cd=    |
    | =Z=      | =abcde= |
    - Yes

  - With given base case & reduction case, can we find all substrings WRC in a given string?
    - Yes

* Code

  #+NAME: main
  #+BEGIN_SRC ruby :noweb yes
  #+END_SRC
  
In =allSubstring=, =left= & =right= are indexes and =mem= is storage variable.

** BASE CASE
   A single character which is present in string is always a substring WRC in a string 

   For string =abb=
   | left | right | character | substring WRC |
   |------+-------+-----------+---------------|
   |    1 |     1 | =a=       | T             |
   |    2 |     2 | =b=       | T             |
   |    3 |     3 | =b=       | T             |

   #+NAME: substring-base-case
   #+BEGIN_SRC ruby
     if left == right
	 return [true, string[left]]

   #+END_SRC
   
** REDUCTION CASE

   #+NAME: substring-reduction-case
   #+BEGIN_SRC ruby
   #+END_SRC


* Testing


  #+BEGIN_SRC ruby :noweb yes :results output :tangle string.rb
  <<main>>
  #+END_SRC

  #+RESULTS:
